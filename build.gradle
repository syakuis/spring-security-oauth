buildscript {
    ext {
        groupId = "io.github.syaku"
        versionName = "1.0.0-SNAPSHOT"
        springBootVersion = "2.4.5"
        springCloudVersion = "2020.0.3"
        springSecurityOAuth2Version = "2.3.8.RELEASE"
        junitVersion = "5.6.2"
        lombokVersion = "1.18.12"
        mapStructVersion = "1.4.2.Final"
        jacksonVersion = "2.11.0"
        querydslVersion = "4.4.0"
    }

    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }

    dependencies {
        classpath "io.franzbecker:gradle-lombok:3.1.0"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "application"
    apply plugin: "idea"
    apply plugin: "io.franzbecker.gradle-lombok"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"

    wrapper {
        gradleVersion = "6.5"
    }

    idea {
        module {
            inheritOutputDirs = true
            outputDir = compileJava.destinationDir
            testOutputDir = compileTestJava.destinationDir
        }
    }

    repositories {
        mavenCentral()
    }

    group groupId
    version versionName

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    compileJava.options.encoding = 'UTF-8'

    configurations {
        implementation.exclude module: "spring-boot-starter-tomcat"
        testImplementation.exclude group: "junit", module: "junit"
        querydsl.extendsFrom compileClasspath
    }

    processResources {
        filesMatching('*.yml') {
            expand(project.properties)
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        implementation "org.apache.commons:commons-lang3:3.7"

        implementation "org.mapstruct:mapstruct:${mapStructVersion}"
        implementation "org.mapstruct.extensions.spring:mapstruct-spring-annotations:0.1.0"

        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

        annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
        annotationProcessor "org.mapstruct.extensions.spring:mapstruct-spring-annotations:0.1.0"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

        testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
        testAnnotationProcessor "org.mapstruct.extensions.spring:mapstruct-spring-annotations:0.1.0"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

        compileOnly "org.springframework.boot:spring-boot-configuration-processor"
        implementation "org.springframework.boot:spring-boot-starter-validation"

        implementation "org.springframework.boot:spring-boot-starter-undertow"
        implementation "org.springframework.boot:spring-boot-starter-web"
        testImplementation "org.springframework.boot:spring-boot-starter-test"
        testImplementation "org.springframework.boot:spring-boot-starter-webflux"

        implementation "org.springframework.boot:spring-boot-starter-security"
        testCompile "org.springframework.security:spring-security-test"

        implementation "org.springframework.boot:spring-boot-starter-data-jpa"

        implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:${jacksonVersion}"

        implementation "com.querydsl:querydsl-jpa:${querydslVersion}"
        annotationProcessor(
                "jakarta.persistence:jakarta.persistence-api",
                "jakarta.annotation:jakarta.annotation-api",
                "com.querydsl:querydsl-apt:${querydslVersion}:jpa"
        )

        implementation "org.mariadb.jdbc:mariadb-java-client:2.3.0"

        implementation "com.h2database:h2:1.4.191"
        testImplementation "com.h2database:h2:1.4.191"
        compileOnly "com.h2database:h2:1.4.191"

        testImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner"
    }

    def querydslDir = "${buildDir}/generated/querydsl"

    sourceSets {
        main.java.srcDir querydslDir
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
        systemProperty 'spring.profiles.active', 'test'
    }
}